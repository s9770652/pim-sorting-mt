@article{Shell1959AHS,
	title={A high-speed sorting procedure},
	author={Donald L. Shell},
	journal={Commun. ACM},
	year={1959},
	volume={2},
	pages={30-32},
	url={https://api.semanticscholar.org/CorpusID:28572656}
}

@misc{skean2023optimization,
	title={Optimization Perspectives on Shellsort},
	author={Oscar Skean and Richard Ehrenborg and Jerzy W. Jaromczyk},
	date={2023-01-01},
	eprint={2301.00316v1},
	archivePrefix={arXiv},
	primaryClass={cs.DS}
}

@InProceedings{10.1007/3-540-44669-9_12,
	author={Ciura, Marcin},
	editor={Freivalds, R{\={u}}si{\c{n}}{\v{s}}},
	title={Best Increments for the Average Case of Shellsort},
	booktitle={Fundamentals of Computation Theory},
	date={2001-08-02},
	publisher={Springer Berlin Heidelberg},
	address={Berlin, Heidelberg},
	pages={106--117},
	abstract={This paper presents the results of using sequential analysis to find increment sequences that minimize the average running time of Shellsort, for array sizes up to several thousand elements. The obtained sequences outperform by about 3{\%} the best ones known so far, and there is a plausible evidence that they are the optimal ones."},
	isbn={978-3-540-44669-9},
	doi={10.1007/3-540-44669-9_12},
%	url={https://web.archive.org/web/20180923235211/http://sun.aei.polsl.pl/~mciura/publikacje/shellsort.pdf},
%	urldate={2024-05-24}
}

@misc{lee2021empirically,
	title={Empirically Improved Tokuda Gap Sequence in Shellsort},
	author={Ying Wai Lee},
	date={2021-12-21},
	eprint={2112.11112v1},
	archivePrefix={arXiv},
	primaryClass={cs.DS}
}

@report{lukas_geis,
	author={Lukas Geis},
	title={Random Number Generation in the Pim-Architecture},
	type={Research Project Report},
	institution={Goethe University Frankfurt},
	date={2024},
	version={8c11f1f},
	pagetotal={13},
	url={https://github.com/lukasgeis/upmem-rng/blob/main/report/report.pdf},
	urldate={2024-05-19},
}

@misc{axtmann2020engineering,
	author={Michael Axtmann and Sascha Witt and Daniel Ferizovic and Peter Sanders},
	title={Engineering In-place (Shared-memory) Sorting Algorithms},
	date={2021-02-03},
	eprint={2009.13569v2},
	archivePrefix={arXiv},
	primaryClass={cs.DC},
}

@article{wegener1993heapsort,
	title={BOTTOM-UP-HEAPSORT, a new variant of HEAPSORT beating, on an average, QUICKSORT (if \(n\) is not very small)},
	journal={Theoretical Computer Science},
	volume={118},
	issue={1},
	pages={81--98},
	date={1993-09-13},
	issn={0304-3975},
	doi={10.1016/0304-3975(93)90364-Y},
%	doi={https://doi.org/10.1016/0304-3975(93)90364-Y},
%	url={https://www.sciencedirect.com/science/article/pii/030439759390364Y},
	author={Ingo Wegener},
	abstract={A variant of HEAPSORT, called BOTTOM-UP-HEAPSORT, is presented. It is based on a new reheap procedure. This sequential sorting algorithm is easy to implement and beats, on an average, QUICKSORT if n⩾400 and a clever version of QUICKSORT (where the split object is the median of 3 randomly chosen objects) if n⩾16000. The worst-case number of comparisons is bounded by 1.5n log n+O(n). Moreover, the new reheap procedure improves the delete procedure for the heap data structure for all n.}
}
